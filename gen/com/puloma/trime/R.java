/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.puloma.trime;

public final class R {
    public static final class array {
        public static final int pref_cand_font_size_values=0x7f050002;
        public static final int pref_cand_num_entries=0x7f050001;
        public static final int pref_cand_num_values=0x7f050000;
    }
    public static final class attr {
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAmount=0x7f010000;
        /**  The unicode value or comma-separated values that this key outputs. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int codes=0x7f010014;
        /**  Default horizontal gap between keys. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x7f010010;
        /**  The icon to show in the popup preview. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconPreview=0x7f01001b;
        /**  Whether this is a modifier key such as Alt or Shift. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isModifier=0x7f010018;
        /**  Whether long-pressing on this key will make it repeat. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isRepeatable=0x7f01001a;
        /**  Whether this is a toggle key. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isSticky=0x7f010019;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x7f010002;
        /**  Key edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
         */
        public static final int keyEdgeFlags=0x7f010017;
        /**  Default height of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHeight=0x7f01000f;
        /**  The icon to display on the key instead of the label. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyIcon=0x7f01001e;
        /**  The label to display on the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabel=0x7f01001d;
        /**  The string of characters to output when this key is pressed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyOutputText=0x7f01001c;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x7f010008;
        /**  Layout resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLayout=0x7f010006;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x7f010007;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x7f010005;
        /**  Size of the text for character keys. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextSize=0x7f010003;
        /**  Default width of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyWidth=0x7f01000e;
        /**  Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardMode=0x7f010013;
        /**  Default KeyboardView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardViewStyle=0x7f010001;
        /**  Size of the text for custom keys with some text and no icon. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelTextSize=0x7f010004;
        /**  The characters to display in the popup keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int popupCharacters=0x7f010016;
        /**  The XML keyboard layout of any popup keyboard. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupKeyboard=0x7f010015;
        /**  Layout resource for popup keyboards. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupLayout=0x7f01000a;
        /**  Row edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
         */
        public static final int rowEdgeFlags=0x7f010012;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowColor=0x7f01000b;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowRadius=0x7f01000c;
        /**  State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_long_pressable=0x7f01000d;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x7f010009;
        /**  Default vertical gap between rows of keys. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x7f010011;
    }
    public static final class color {
        public static final int pinyin_normal=0x7f070000;
        public static final int symbol=0x7f070001;
    }
    public static final class dimen {
        public static final int candidate_text_size=0x7f080002;
        public static final int candidate_view_height=0x7f080001;
        public static final int key_height=0x7f080000;
        public static final int key_text_size=0x7f080004;
        public static final int label_text_size=0x7f080005;
        public static final int pinyin_text_size=0x7f080003;
        public static final int symbol_text_size=0x7f080006;
    }
    public static final class drawable {
        public static final int arrow_bg=0x7f020000;
        public static final int btn_close=0x7f020001;
        public static final int btn_close_normal=0x7f020002;
        public static final int btn_close_pressed=0x7f020003;
        public static final int btn_close_selected=0x7f020004;
        public static final int btn_keyboard_key_trans_normal=0x7f020005;
        public static final int btn_keyboard_key_trans_normal_off=0x7f020006;
        public static final int btn_keyboard_key_trans_normal_on=0x7f020007;
        public static final int btn_keyboard_key_trans_pressed=0x7f020008;
        public static final int btn_keyboard_key_trans_pressed_off=0x7f020009;
        public static final int btn_keyboard_key_trans_pressed_on=0x7f02000a;
        public static final int btn_keyboard_key_trans_selected=0x7f02000b;
        public static final int candidate_highlight=0x7f02000c;
        public static final int candidate_separator=0x7f02000d;
        public static final int candidates_container_bg=0x7f02000e;
        public static final int icon=0x7f02000f;
        public static final int key=0x7f020010;
        public static final int keyboard_background=0x7f020011;
        public static final int keyboard_key_feedback=0x7f020012;
        public static final int keyboard_key_feedback_background=0x7f020013;
        public static final int keyboard_key_feedback_more_background=0x7f020014;
        public static final int keyboard_popup_panel_background=0x7f020015;
        public static final int smallicon=0x7f020016;
    }
    public static final class id {
        public static final int arrow_left=0x7f060005;
        public static final int arrow_right=0x7f060007;
        public static final int bottom=0x7f060001;
        public static final int candidate_view=0x7f060006;
        public static final int candidates_container=0x7f060004;
        public static final int keyboard=0x7f060008;
        public static final int left=0x7f060002;
        public static final int license_view=0x7f060009;
        public static final int right=0x7f060003;
        public static final int top=0x7f060000;
    }
    public static final class layout {
        public static final int candidates=0x7f030000;
        public static final int input=0x7f030001;
        public static final int keyboard_key_preview=0x7f030002;
        public static final int keyboard_popup_keyboard=0x7f030003;
        public static final int licensing=0x7f030004;
    }
    public static final class string {
        public static final int close=0x7f09001e;
        public static final int exportdb_failure=0x7f090025;
        public static final int exportdb_message=0x7f090023;
        public static final int exportdb_success=0x7f090024;
        /**  Titles for IME  
 Titles for IME  
         */
        public static final int ime_name=0x7f090000;
        public static final int importdb_failure=0x7f090022;
        public static final int importdb_message=0x7f090020;
        public static final int importdb_success=0x7f090021;
        public static final int initdb_message=0x7f09001f;
        public static final int other_ime=0x7f09001c;
        public static final int pref_association_title=0x7f090012;
        public static final int pref_cand_font_size=0x7f090009;
        public static final int pref_cand_max_phrase=0x7f09000a;
        public static final int pref_cand_num=0x7f090008;
        public static final int pref_commit_py_summary=0x7f090015;
        public static final int pref_commit_py_title=0x7f090014;
        public static final int pref_exportdb=0x7f090018;
        public static final int pref_exportdb_summary=0x7f090019;
        public static final int pref_full_py_summary=0x7f090010;
        public static final int pref_full_py_title=0x7f09000f;
        public static final int pref_function=0x7f09000d;
        public static final int pref_importdb=0x7f090016;
        public static final int pref_importdb_summary=0x7f090017;
        public static final int pref_init_chinese=0x7f09000e;
        public static final int pref_key_font_size=0x7f09000c;
        public static final int pref_keyboard_preview_summary=0x7f090006;
        public static final int pref_keyboard_preview_title=0x7f090005;
        /**  Preference settings 
 Preference settings 
         */
        public static final int pref_licensing=0x7f090001;
        public static final int pref_py_prompt_title=0x7f090007;
        public static final int pref_sc_title=0x7f090013;
        public static final int pref_single_title=0x7f090011;
        public static final int pref_sound_title=0x7f090004;
        public static final int pref_ui=0x7f090003;
        public static final int pref_vibrate_title=0x7f090002;
        public static final int pronunciation=0x7f09001d;
        public static final int set_ime=0x7f09001a;
        public static final int set_schema=0x7f09001b;
        public static final int unlimited=0x7f09000b;
    }
    public static final class xml {
        public static final int method=0x7f040000;
        public static final int prefs=0x7f040001;
        public static final int template=0x7f040002;
    }
    public static final class styleable {
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap com.puloma.trime:horizontalGap}</code></td><td> Default horizontal gap between keys.</td></tr>
           <tr><td><code>{@link #Keyboard_keyHeight com.puloma.trime:keyHeight}</code></td><td> Default height of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_keyWidth com.puloma.trime:keyWidth}</code></td><td> Default width of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap com.puloma.trime:verticalGap}</code></td><td> Default vertical gap between rows of keys.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_keyHeight
           @see #Keyboard_keyWidth
           @see #Keyboard_verticalGap
         */
        public static final int[] Keyboard = {
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 2;
        /**
          <p>
          @attr description
           Default height of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyHeight
        */
        public static final int Keyboard_keyHeight = 1;
        /**
          <p>
          @attr description
           Default width of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyWidth
        */
        public static final int Keyboard_keyWidth = 0;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:verticalGap
        */
        public static final int Keyboard_verticalGap = 3;
        /** Attributes that can be used with a KeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardView_keyBackground com.puloma.trime:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewHeight com.puloma.trime:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewLayout com.puloma.trime:keyPreviewLayout}</code></td><td> Layout resource for key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewOffset com.puloma.trime:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextColor com.puloma.trime:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextSize com.puloma.trime:keyTextSize}</code></td><td> Size of the text for character keys.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyboardViewStyle com.puloma.trime:keyboardViewStyle}</code></td><td> Default KeyboardView style.</td></tr>
           <tr><td><code>{@link #KeyboardView_labelTextSize com.puloma.trime:labelTextSize}</code></td><td> Size of the text for custom keys with some text and no icon.</td></tr>
           <tr><td><code>{@link #KeyboardView_popupLayout com.puloma.trime:popupLayout}</code></td><td> Layout resource for popup keyboards.</td></tr>
           <tr><td><code>{@link #KeyboardView_shadowColor com.puloma.trime:shadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_shadowRadius com.puloma.trime:shadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_verticalCorrection com.puloma.trime:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #KeyboardView_keyBackground
           @see #KeyboardView_keyPreviewHeight
           @see #KeyboardView_keyPreviewLayout
           @see #KeyboardView_keyPreviewOffset
           @see #KeyboardView_keyTextColor
           @see #KeyboardView_keyTextSize
           @see #KeyboardView_keyboardViewStyle
           @see #KeyboardView_labelTextSize
           @see #KeyboardView_popupLayout
           @see #KeyboardView_shadowColor
           @see #KeyboardView_shadowRadius
           @see #KeyboardView_verticalCorrection
         */
        public static final int[] KeyboardView = {
            0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004,
            0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c
        };
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyBackground
        */
        public static final int KeyboardView_keyBackground = 1;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyPreviewHeight
        */
        public static final int KeyboardView_keyPreviewHeight = 7;
        /**
          <p>
          @attr description
           Layout resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyPreviewLayout
        */
        public static final int KeyboardView_keyPreviewLayout = 5;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyPreviewOffset
        */
        public static final int KeyboardView_keyPreviewOffset = 6;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyTextColor
        */
        public static final int KeyboardView_keyTextColor = 4;
        /**
          <p>
          @attr description
           Size of the text for character keys. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyTextSize
        */
        public static final int KeyboardView_keyTextSize = 2;
        /**
          <p>
          @attr description
           Default KeyboardView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyboardViewStyle
        */
        public static final int KeyboardView_keyboardViewStyle = 0;
        /**
          <p>
          @attr description
           Size of the text for custom keys with some text and no icon. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:labelTextSize
        */
        public static final int KeyboardView_labelTextSize = 3;
        /**
          <p>
          @attr description
           Layout resource for popup keyboards. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:popupLayout
        */
        public static final int KeyboardView_popupLayout = 9;
        /**
          <p>This symbol is the offset where the {@link com.puloma.trime.R.attr#shadowColor}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.puloma.trime:shadowColor
        */
        public static final int KeyboardView_shadowColor = 10;
        /**
          <p>This symbol is the offset where the {@link com.puloma.trime.R.attr#shadowRadius}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.puloma.trime:shadowRadius
        */
        public static final int KeyboardView_shadowRadius = 11;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:verticalCorrection
        */
        public static final int KeyboardView_verticalCorrection = 8;
        /** Attributes that can be used with a KeyboardViewPreviewState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardViewPreviewState_state_long_pressable com.puloma.trime:state_long_pressable}</code></td><td> State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background.</td></tr>
           </table>
           @see #KeyboardViewPreviewState_state_long_pressable
         */
        public static final int[] KeyboardViewPreviewState = {
            0x7f01000d
        };
        /**
          <p>
          @attr description
           State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:state_long_pressable
        */
        public static final int KeyboardViewPreviewState_state_long_pressable = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_codes com.puloma.trime:codes}</code></td><td> The unicode value or comma-separated values that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_iconPreview com.puloma.trime:iconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isModifier com.puloma.trime:isModifier}</code></td><td> Whether this is a modifier key such as Alt or Shift.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isRepeatable com.puloma.trime:isRepeatable}</code></td><td> Whether long-pressing on this key will make it repeat.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isSticky com.puloma.trime:isSticky}</code></td><td> Whether this is a toggle key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyEdgeFlags com.puloma.trime:keyEdgeFlags}</code></td><td> Key edge flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIcon com.puloma.trime:keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabel com.puloma.trime:keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyOutputText com.puloma.trime:keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyboardMode com.puloma.trime:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupCharacters com.puloma.trime:popupCharacters}</code></td><td> The characters to display in the popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupKeyboard com.puloma.trime:popupKeyboard}</code></td><td> The XML keyboard layout of any popup keyboard.</td></tr>
           </table>
           @see #Keyboard_Key_codes
           @see #Keyboard_Key_iconPreview
           @see #Keyboard_Key_isModifier
           @see #Keyboard_Key_isRepeatable
           @see #Keyboard_Key_isSticky
           @see #Keyboard_Key_keyEdgeFlags
           @see #Keyboard_Key_keyIcon
           @see #Keyboard_Key_keyLabel
           @see #Keyboard_Key_keyOutputText
           @see #Keyboard_Key_keyboardMode
           @see #Keyboard_Key_popupCharacters
           @see #Keyboard_Key_popupKeyboard
         */
        public static final int[] Keyboard_Key = {
            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
            0x7f010017, 0x7f010018, 0x7f010019, 0x7f01001a,
            0x7f01001b, 0x7f01001c, 0x7f01001d, 0x7f01001e
        };
        /**
          <p>
          @attr description
           The unicode value or comma-separated values that this key outputs. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:codes
        */
        public static final int Keyboard_Key_codes = 1;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:iconPreview
        */
        public static final int Keyboard_Key_iconPreview = 8;
        /**
          <p>
          @attr description
           Whether this is a modifier key such as Alt or Shift. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:isModifier
        */
        public static final int Keyboard_Key_isModifier = 5;
        /**
          <p>
          @attr description
           Whether long-pressing on this key will make it repeat. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:isRepeatable
        */
        public static final int Keyboard_Key_isRepeatable = 7;
        /**
          <p>
          @attr description
           Whether this is a toggle key. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:isSticky
        */
        public static final int Keyboard_Key_isSticky = 6;
        /**
          <p>
          @attr description
           Key edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyEdgeFlags
        */
        public static final int Keyboard_Key_keyEdgeFlags = 4;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyIcon
        */
        public static final int Keyboard_Key_keyIcon = 11;
        /**
          <p>
          @attr description
           The label to display on the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyLabel
        */
        public static final int Keyboard_Key_keyLabel = 10;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyOutputText
        */
        public static final int Keyboard_Key_keyOutputText = 9;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the key will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyboardMode
        */
        public static final int Keyboard_Key_keyboardMode = 0;
        /**
          <p>
          @attr description
           The characters to display in the popup keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.puloma.trime:popupCharacters
        */
        public static final int Keyboard_Key_popupCharacters = 3;
        /**
          <p>
          @attr description
           The XML keyboard layout of any popup keyboard. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:popupKeyboard
        */
        public static final int Keyboard_Key_popupKeyboard = 2;
        /** Attributes that can be used with a Keyboard_Row.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Row_keyboardMode com.puloma.trime:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Row_rowEdgeFlags com.puloma.trime:rowEdgeFlags}</code></td><td> Row edge flags.</td></tr>
           </table>
           @see #Keyboard_Row_keyboardMode
           @see #Keyboard_Row_rowEdgeFlags
         */
        public static final int[] Keyboard_Row = {
            0x7f010012, 0x7f010013
        };
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.puloma.trime:keyboardMode
        */
        public static final int Keyboard_Row_keyboardMode = 1;
        /**
          <p>
          @attr description
           Row edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.puloma.trime:rowEdgeFlags
        */
        public static final int Keyboard_Row_rowEdgeFlags = 0;
        /** Attributes that can be used with a Theme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Theme_backgroundDimAmount com.puloma.trime:backgroundDimAmount}</code></td><td></td></tr>
           </table>
           @see #Theme_backgroundDimAmount
         */
        public static final int[] Theme = {
            0x7f010000
        };
        /**
          <p>This symbol is the offset where the {@link com.puloma.trime.R.attr#backgroundDimAmount}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.puloma.trime:backgroundDimAmount
        */
        public static final int Theme_backgroundDimAmount = 0;
    };
}
